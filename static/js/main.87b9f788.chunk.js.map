{"version":3,"sources":["components/SearchBlock/index.js","components/SearchBlock/SearchBlock.js","components/Header/index.js","components/Header/Header.js","components/TodoListItem/index.js","components/TodoListItem/TodoListItem.js","components/TodoList/index.js","components/TodoList/TodoList.js","components/Filter/index.js","components/Filter/Filter.js","components/ItemAddForm/ItemAddForm.js","components/App/index.js","components/App/App.js","index.js"],"names":["SearchBlock","state","searchText","onTextChange","event","setState","target","value","props","onSearch","className","placeholder","onChange","this","React","Component","Header","done","todo","TodoListItem","text","onDelete","onToggleDone","onToggleImportant","classNames","important","onClick","TodoList","todos","length","elements","map","item","id","otherPros","CSSTransition","key","timeout","TransitionGroup","component","Filter","buttonsArr","name","filter","onFilterChange","buttons","el","ItemAddForm","inputText","onSubmit","preventDefault","onAdd","required","App","cId","todoData","search","arr","toLowerCase","includes","prevState","index","findIndex","slice","label","obj","getNewArraAccordingProp","prop","newObj","doneSize","todoSize","visibleTodos","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.87b9f788.chunk.js","sourcesContent":["import SearchBlock from \"./SearchBlock\";\n\nexport default SearchBlock;","import React from 'react';\nimport './SearchBlock.css';\n\nexport default class SearchBlock extends React.Component {\n    state = {\n        searchText: '',\n    }\n\n    onTextChange = (event) => {\n        this.setState({\n            searchText: event.target.value,\n        });\n        this.props.onSearch(event.target.value)\n    }\n\n    render() {\n            return(\n            <div className = \"SearchBlock\" >\n                    <input\n                        className=\"form-control\"\n                        placeholder='Search'\n                        onChange={this.onTextChange}\n                        value={this.state.searchText}\n                    />\n            </div>\n        );\n    }\n}\n","import Header from './Header'\n\nexport default Header;","import React from 'react';\n\nimport './Header.css'\n\nconst Header = (props)=>{\n\n  const { done, todo } = props;\n\n    return (\n      <div className=\"Header\">\n        <h1>To do List</h1>\n        <p>\n          <span>todo: {todo}</span>\n          <span>done: {done}</span>\n        </p>\n      </div>\n    );\n  }\n\n  export default Header;","import TodoListItem from \"./TodoListItem\";\n\nexport default TodoListItem;","import React from 'react';\n\nimport './TodoListItem.css'\n\nconst TodoListItem = (props) => {\n\n    const { text, onDelete, done, onToggleDone, onToggleImportant, important } = props;\n\n    let classNames = `TodoListItem`;\n\n    if (done) {\n        classNames += ' done'\n    }\n\n    if (important) {\n        classNames += ' important';\n    }\n\n\n    return (\n        <div className={classNames}>\n            <span onClick={onToggleDone}>\n                {text}\n            </span>\n            <div>\n                <button\n                    className=\"btn btn-outline-danger remove-btn\"\n                    onClick={onDelete}\n                >\n                    <i className=\"fa fa-trash\"></i>\n                </button>\n                <button\n                    className=\"btn btn-outline-primary\"\n                    onClick={onToggleImportant}\n                >\n                    <i className=\"fa fa-exclamation\"></i>\n                </button>\n            </div>\n        </div>\n    );\n\n}\nexport default TodoListItem;\n","import TodoList from \"./TodoList\";\n\nexport default TodoList;","import React from 'react';\nimport TodoListItem from '../TodoListItem';\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\n\nimport './TodoList.css'\n\nconst TodoList = (props) => {\n  const { todos, onDelete, onToggleDone, onToggleImportant } = props;\n  if (!todos.length) {\n    const elements = <p>Nothing to do!</p>;\n    return elements\n  }\n  const elements = todos.map((item) => {\n\n    const { id, ...otherPros } = item;\n\n    return (\n      <CSSTransition\n      key={id}\n      classNames={'tranformTodo'}\n      timeout={700}>\n        <li className=\"list-group-item\" key={id}>\n          <TodoListItem\n            {...otherPros}\n            onDelete={() => onDelete(id)}\n            onToggleDone={() => onToggleDone(id)}\n            onToggleImportant={() => onToggleImportant(id)}\n          />\n        </li>\n      </CSSTransition>\n    );\n  });\n\n  return (\n    <TransitionGroup component='ul' className=\"list-group\">\n      {elements}\n    </TransitionGroup>\n  )\n}\n\nexport default TodoList;\n","import Filter from './Filter'\n\n\nexport default Filter;","import React from 'react';\n\nimport './Filter.css'\n\n\n\nexport default class Filter extends React.Component{\n    buttonsArr = [\n        {name:'all'},\n        {name:'active'},\n        {name:'done'},\n    ]\n    render(){\n        const {filter, onFilterChange} = this.props;\n        const buttons = this.buttonsArr.map(el => {\n            const isActive = filter === el.name;\n            const classNames = isActive ? 'btn btn-primary' : 'btn btn-outline-secondary';\n            return <button className={classNames}\n             key ={el.name}\n             onClick = {() => onFilterChange(el.name)}>\n                {el.name}\n             </button>\n        })\n    return (\n    <div className=\"Filter\">\n      {buttons}\n    </div>)\n}\n}\n\n","import React from 'react';\n\nimport './ItemAddForm.css';\n\nexport default class ItemAddForm extends React.Component {\n\n    state = {\n        inputText: '',\n    }\n    \n    onTextChange = (event) => {\n        this.setState({\n            inputText: event.target.value\n        }); \n    }\n    onSubmit = (event) => {\n        event.preventDefault();\n        this.props.onAdd(this.state.inputText);\n        this.setState({\n            inputText: ''\n        });\n    }\n    render () {\n        const {inputText} = this.state\n    return(\n        <div className=\"ItemAddForm\">\n            <form onSubmit={this.onSubmit}>\n                <input required\n                className = 'form-control form'\n                placeholder = ' Add new todos'\n                onChange = {this.onTextChange}\n                value={inputText} />\n            <button\n                className=\"addButton btn btn-primary\"\n            >Add item</button>\n            </form>\n            <hr/>\n        </div>\n        \n    );\n}\n}\n\n","import App from './App'\n\nexport default App;","import React from 'react';\nimport SearchBlock from '../SearchBlock';\nimport Header from '../Header';\nimport TodoList from '../TodoList';\nimport './App.css';\nimport Filter from '../Filter';\nimport ItemAddForm from '../ItemAddForm/ItemAddForm';\n\n\nexport default class App extends React.Component {\n\n  cId = 100;\n\n  state = {\n    todoData: [\n      { text: 'Learn HTML', important: false, done: false, id: 1 },\n      { text: 'Learn CSS', important: false, done: false, id: 2 },\n      { text: 'Learn JS', important: false, done: false, id: 3 },\n      { text: 'Learn React', important: false, done: false, id: 4 },\n      { text: 'Learn Redux', important: false, done: false, id: 5 },\n    ],\n    filter: 'all', // all || active || done\n    search: '', // Type string\n  }\n\n  filter = (arr, filter) => {\n    switch (filter) {\n      case 'all':\n        return arr;\n      case 'active':\n        return arr.filter(el => !el.done);\n      case 'done':\n        return arr.filter(el => el.done);\n      default: return arr\n    }\n  }\n  search = (arr, searchText) => {\n    if (!searchText) {\n      return arr\n    }\n    const newArr = arr.filter((item) => {\n      return item.text.toLowerCase().includes(searchText.toLowerCase())\n    });\n\n    return newArr;\n  }\n  onDelete = (id) => {\n    this.setState((prevState) => {\n      const index = prevState.todoData.findIndex((el) => el.id === id);\n\n      const arr = [\n        ...prevState.todoData.slice(0, index),\n        ...prevState.todoData.slice(index + 1)\n      ];\n\n      return {\n        todoData: arr\n      }\n    })\n  }\n\n  onAdd = (label) => {\n    const obj = {\n      text: label,\n      important: false,\n      id: this.cId++,\n    };\n\n    this.setState((prevState) => {\n      const newArr = [obj, ...prevState.todoData];\n\n      return {\n        todoData: newArr\n      }\n    })\n\n  }\n\n  getNewArraAccordingProp = (prop, prevState, id) => {\n    const index = prevState.todoData.findIndex((el) => el.id === id);\n\n    const newObj = {\n      ...prevState.todoData[index],\n      [prop]: !prevState.todoData[index][prop]\n    };\n\n    const newArr = [\n      ...prevState.todoData.slice(0, index),\n      newObj,\n      ...prevState.todoData.slice(index + 1)\n    ];\n\n    return newArr;\n  }\n\n  onToggleDone = (id) => {\n    this.setState((prevState) => {\n      const newArr = this.getNewArraAccordingProp('done', prevState, id);\n\n      return {\n        todoData: newArr\n      }\n    });\n  }\n  onToggleImportant = (id) => {\n\n    this.setState((prevState) => {\n      const newArr = this.getNewArraAccordingProp('important', prevState, id);\n\n      return {\n        todoData: newArr\n      }\n    });\n  }\n  onFilterChange = (filter) => {\n    this.setState({\n      filter: filter,\n    })\n  }\n  onSearch = (search) => {\n    this.setState({\n      search: search,\n    })\n  }\n\n  render() {\n    const { todoData, filter, search } = this.state;\n    const doneSize = todoData.filter(el => el.done).length;\n    const todoSize = (todoData.length - doneSize);\n    const visibleTodos = this.search(this.filter (todoData, filter), search);\n    \n    return (\n      <div className=\"App\">\n        <Header done={doneSize} todo={todoSize} />\n        <div className=\"line\">\n          <SearchBlock\n            onSearch={this.onSearch} />\n          <Filter\n            filter={filter}\n            onFilterChange={this.onFilterChange} />\n        </div>\n        <ItemAddForm onAdd={this.onAdd} />\n        <TodoList\n          todos={visibleTodos}\n          onDelete={this.onDelete}\n          onToggleDone={this.onToggleDone}\n          onToggleImportant={this.onToggleImportant}\n        />\n      </div>\n    );\n  }\n}","import 'bootstrap/dist/css/bootstrap.min.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\n\nReactDOM.render( < App /> , document.getElementById('root'));"],"sourceRoot":""}